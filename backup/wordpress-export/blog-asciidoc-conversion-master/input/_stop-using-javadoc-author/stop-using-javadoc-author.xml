<item>
    <title>Stop using Javadoc @author tag</title>
    <link>http://vojtechruzicka.com/stop-using-javadoc-author-tag/</link>
    <pubDate>Sat, 07 May 2016 19:57:48 +0000</pubDate>
    <dc:creator><![CDATA[vojtechruzicka]]></dc:creator>
    <guid isPermaLink="false">http://vojtechruzicka.com/?p=316</guid>
    <description></description>
    <content:encoded><![CDATA[<img class=" wp-image-324 alignleft" src="http://vojtechruzicka.com/wp-content/uploads/2016/05/Clipboard02.png" alt="Clipboard02" width="150" height="150" />
<div style="text-align: justify;"></div>
<div style="text-align: justify;">Are you still using @author javadoc tag? Maybe it's time to reconsider. Let's discuss why the tag may be actually harmful and why you should stop using it.</div>
<div></div>
<!--more-->
<h2>Javadoc @author tag</h2>
<p style="text-align: justify;">In javadoc, there is a @author tag, which is supposed to indicate the original author of the file and possibly all contributors, who made significant changes to the file.</p>

<pre lang="java">/**
* Validator used to check whether given string is
* no longer than specified amount of characters.
*
* @author Vojtech Ruzicka
*/
public class MaxLengthValidator {
  ...
}</pre>
<div></div>
<div style="text-align: justify;">You can see more details in the <a href="http://www.oracle.com/technetwork/java/javase/documentation/index-137868.html#@author">How to Write Doc Comments for the Javadoc Tool</a> article and <a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#author">JavaDoc reference guide</a>.</div>
<h2></h2>
<h2>What is wrong with @author</h2>
<p style="text-align: justify;">The tag is not actually included in generated javadoc. At least not by default - you need to <a href="https://docs.oracle.com/javase/7/docs/technotes/tools/windows/javadoc.html#author">explicitly specify</a> <em>-author</em> parameter to include the information in the generated documentation. Therefore it is only visible to a person, who is viewing the source code. In that case, there is a much better source of information about authors and contributors - your version control system (such as Git or SVN). Adding this also in comments is a duplication of information and unwanted noise. You can already see who and when edited each and single line in the file.</p>


[caption id="attachment_338" align="alignnone" width="774"]<img class="size-full wp-image-338" src="http://vojtechruzicka.com/wp-content/uploads/2016/05/annotate.png" alt="Authors and time of changes as shown in Intellij Idea 2016.1" width="774" height="221" /> Authors and time of changes as shown in IntelliJ Idea 2016.1[/caption]
<p style="text-align: justify;">Better yet, unlike the @author tag, the information is always accurate and up to date. Comments have a tendency to rot and be outdated and obsolete quickly. Developers tend to ignore updating comments when making changes. After a while and some refactorings, the original file is usually much different than when original @author created the first version. Not to mention that developers listed are often not with the company anymore or left the project years ago.</p>

<h2>IDE templates</h2>
<p style="text-align: justify;">What is even worse is the default, non-javadoc template stating author and creation date, which some IDEs automatically insert into each new file. Following is the default one used by IntelliJ Idea (as of 2016.1).</p>

<pre lang="java">/**
 * Created by vojtech on 5/7/2016.
 */
public class BrandNewClass {
}</pre>
<p style="text-align: justify;">It has all the disadvantages of @author javadoc and some more. Unlike javadoc, it is not displayed by IDE when requesting documentation pop-ups or in auto-complete. If you want to include author, use the @author tag and not those templates.</p>

<div>
<h2>Still want to keep it?</h2>
<p style="text-align: justify;">Still not convinced? Maybe there is a company policy that requires the inclusion of the @author tag or maybe you just love it. In that case, I suggest using it for marking a contact person, who is currently responsible for the given file. It is especially useful on large, long-running projects with many developers. While working with such a huge and old codebase, it is much more important to know who to contact regarding specific file or module rather than to know who was the major contributor years ago. Just be sure to keep the tags updated. However, with so many files to keep up to date, it may be better to include the <a href="http://bit.ly/1s9pTQG">author information on package level</a> of whole modules rather than individual files.</p>

<h2>Conclusion</h2>
<p style="text-align: justify;">I suggest you stop using the @author tag, same as <a href="http://www.theinquirer.net/inquirer/news/1037207/apache-enforces-the-removal-of-author-tags">Apache </a>or <a href="https://github.com/gradle/gradle/commit/a1b9612fa06f90f20b115cede557e22287501034">Gradle </a>did. If you keep using it, at least be sure to keep the info always up to date.</p>

</div>]]></content:encoded>
    <excerpt:encoded><![CDATA[]]></excerpt:encoded>
    <wp:post_id>316</wp:post_id>
    <wp:post_date><![CDATA[2016-05-07 21:57:48]]></wp:post_date>
    <wp:post_date_gmt><![CDATA[2016-05-07 19:57:48]]></wp:post_date_gmt>
    <wp:comment_status><![CDATA[open]]></wp:comment_status>
    <wp:ping_status><![CDATA[open]]></wp:ping_status>
    <wp:post_name><![CDATA[stop-using-javadoc-author-tag]]></wp:post_name>
    <wp:status><![CDATA[publish]]></wp:status>
    <wp:post_parent>0</wp:post_parent>
    <wp:menu_order>0</wp:menu_order>
    <wp:post_type><![CDATA[post]]></wp:post_type>
    <wp:post_password><![CDATA[]]></wp:post_password>
    <wp:is_sticky>0</wp:is_sticky>
    <category domain="category" nicename="java"><![CDATA[Java]]></category>
    <category domain="post_tag" nicename="java"><![CDATA[java]]></category>
    <category domain="post_tag" nicename="javadoc"><![CDATA[javadoc]]></category>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
        <wp:meta_value><![CDATA[1]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_yoast_wpseo_focuskw_text_input]]></wp:meta_key>
        <wp:meta_value><![CDATA[javadoc]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_yoast_wpseo_focuskw]]></wp:meta_key>
        <wp:meta_value><![CDATA[javadoc]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_yoast_wpseo_linkdex]]></wp:meta_key>
        <wp:meta_value><![CDATA[77]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_yoast_wpseo_primary_category]]></wp:meta_key>
        <wp:meta_value><![CDATA[5]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_yoast_wpseo_metadesc]]></wp:meta_key>
        <wp:meta_value><![CDATA[Still using @author javadoc tag? Let's discuss why the tag may be actually harmful and why you should stop using it.]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_jetpack_related_posts_cache]]></wp:meta_key>
        <wp:meta_value><![CDATA[a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1517425452;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:871;}i:1;a:1:{s:2:"id";i:203;}i:2;a:1:{s:2:"id";i:238;}}}}]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
        <wp:meta_value><![CDATA[324]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_wpas_done_all]]></wp:meta_key>
        <wp:meta_value><![CDATA[1]]></wp:meta_value>
    </wp:postmeta>
    <wp:postmeta>
        <wp:meta_key><![CDATA[_yoast_wpseo_content_score]]></wp:meta_key>
        <wp:meta_value><![CDATA[90]]></wp:meta_value>
    </wp:postmeta>
    <wp:comment>
        <wp:comment_id>6</wp:comment_id>
        <wp:comment_author><![CDATA[Krab]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[krablak@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url></wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[91.139.0.68]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2016-05-10 14:23:06]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2016-05-10 12:23:06]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[@author tag is extremely useful when components/classes are reused across different projects and version history is lost (because they are using different repos and sometimes also different VCS). Thats common situation at our projects and @author tag points me usually to right person in case of any questions.

Mostly are @author tags extended and updated during component life time on project. Because it's devs nature to shout:  "Hey it was me who fix it!"

There is also another super cool feature of @author tag. It works as "code quality flag" which says ok I know this guy and this code will be pure shit show. Or I know this guy and it will be ok.

Nice post. Love it!]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>0</wp:comment_parent>
        <wp:comment_user_id>0</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:2:{s:4:"time";d:1462882986.9041450023651123046875;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1462900909.4761159420013427734375;s:5:"event";s:15:"status-approved";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>7</wp:comment_id>
        <wp:comment_author><![CDATA[Vojtech Ruzicka]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[vojtech.ruz@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url>http://vojtechruzicka.com</wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[86.49.120.214]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2016-05-10 21:51:42]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2016-05-10 19:51:42]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[Thanks for your feedback. That is certainly true. The issue is not black and white. As usual in software development, there is no silver bullet which you can apply in each and every situation. You have to weigh tradeoffs of each solution in each case separately depending on your current priorities.
In case version history is unavailable, it is probably best to keep the @author tag. However more that ever, be sure to keep that information up to date. Also, when you are cited as an author, you may arguably feel more responsibility for the piece of code and do your best to maintain its quality. Unfortunately, from my experience it is seldom the case.
So the bottom line might be - if you have your code in the Version Control System at all times, you may want to ommit the @author tag. If not, be aware of the downsides and at least try hard to keep it updated at all times.]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>6</wp:comment_parent>
        <wp:comment_user_id>1</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1462909902.8102490901947021484375;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>53</wp:comment_id>
        <wp:comment_author><![CDATA[Radek]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[Radeq.cz@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url></wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[37.188.150.117]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2017-04-18 22:02:17]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2017-04-18 20:02:17]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[Even if a Version Control System is used, the code can be distributed without it's history. E.g. as a tarball. Such case is another reason to duplicate the authorship information.

Also AFAIK, here in Czech Republic, if I, as an employee, write a code, the author is actually my employer. Then, depending on the policy, it may happen that the content of the @author tag is different from the name stored in the commit metadata.

I am not saying that we all should use @author tags. But I believe that tracking the information in VCS is not the best idea. Personally, I prefer to maintain two files in the top-level directory. An AUTHORS file and a CONTRIBUTORS file. One for the copyright owners, the other to give credit to the real people who actually wrote the code. I consider this approach to be a decent alternative to the @author and VCS approaches.]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>0</wp:comment_parent>
        <wp:comment_user_id>0</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:2:{s:4:"time";d:1492545737.80397701263427734375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1492695886.9722039699554443359375;s:5:"event";s:15:"status-approved";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>64</wp:comment_id>
        <wp:comment_author><![CDATA[Vojtech Ruzicka]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[vojtech.ruz@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url>http://vojtechruzicka.com</wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[155.91.64.11]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2017-04-20 15:57:30]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2017-04-20 13:57:30]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[It is an viable alternative and it is well suited for high level overview. It does not, however allow such fine grained information as VCS, where you can find a person responsible for each line of code and find a broader context of their change by linking it to particular commit and task. VCS is more suited to find a specific person responsible when working on a larger project with multiple developers, while your approach is more suitable for external users of your code.]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>53</wp:comment_parent>
        <wp:comment_user_id>1</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1492696650.92640399932861328125;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
            <wp:meta_value><![CDATA[jetpack]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
            <wp:meta_value><![CDATA[https://s2.wp.com/wp-content/mu-plugins/highlander-comments/images/wplogo.png]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
            <wp:meta_value><![CDATA[1]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>203</wp:comment_id>
        <wp:comment_author><![CDATA[Vojtech Ruzicka]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[vojtech.ruz@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url>http://vojtechruzicka.com</wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[213.220.217.109]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2017-10-09 19:34:08]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2017-10-09 17:34:08]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[Hi, what do you mean by that? This article is about javadoc @author tag.]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>202</wp:comment_parent>
        <wp:comment_user_id>1</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1507570448.8316419124603271484375;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
            <wp:meta_value><![CDATA[jetpack]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
            <wp:meta_value><![CDATA[1]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
            <wp:meta_value><![CDATA[https://s2.wp.com/wp-content/mu-plugins/highlander-comments/images/wplogo.png]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>202</wp:comment_id>
        <wp:comment_author><![CDATA[SAMIR]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[samir.almorabite@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url></wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[78.141.179.155]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2017-10-09 08:09:25]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2017-10-09 06:09:25]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[Hello,
what's reference of Spring certification exam 4.3?]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>0</wp:comment_parent>
        <wp:comment_user_id>0</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1507570385.633802890777587890625;s:5:"event";s:15:"status-approved";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:2:{s:4:"time";d:1507529365.7450559139251708984375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>263</wp:comment_id>
        <wp:comment_author><![CDATA[PMLavigne]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[me@patrick.codes]]></wp:comment_author_email>
        <wp:comment_author_url></wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[47.200.186.143]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2018-01-24 18:29:40]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2018-01-24 17:29:40]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[What version of javadoc are you using? The information from the @author tag is definitely included in the documentation generated by the version I'm using (1.8.0_152). It's at the bottom of the heading section of class / interface / etc pages, there's an "Author:" section with names listed. Maybe this was added in Java 8 or something?]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>0</wp:comment_parent>
        <wp:comment_user_id>0</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1517138595.023065090179443359375;s:5:"event";s:15:"status-approved";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:2:{s:4:"time";d:1516814980.24602603912353515625;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>268</wp:comment_id>
        <wp:comment_author><![CDATA[Vojtech Ruzicka]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[vojtech.ruz@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url>http://vojtechruzicka.com</wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[213.220.217.109]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2018-01-28 13:10:12]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2018-01-28 12:10:12]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[Thanks for pointing this out. Authora are not generated by default by javadoc command line tool. You need to explicitly add -author parameter. I should update my article so it is more clear and not misleading.]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>263</wp:comment_parent>
        <wp:comment_user_id>1</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1517141412.2388629913330078125;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>272</wp:comment_id>
        <wp:comment_author><![CDATA[PMLavigne]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[me@patrick.codes]]></wp:comment_author_email>
        <wp:comment_author_url></wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[96.228.152.146]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2018-01-29 15:40:01]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2018-01-29 14:40:01]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[Ah ok, my build tool must be setting that automatically then since I didn't have to explicitly set it. Anyway your points are still all valid, just confused me a bit :)]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>268</wp:comment_parent>
        <wp:comment_user_id>0</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:2:{s:4:"time";d:1517236801.07849788665771484375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
    <wp:comment>
        <wp:comment_id>273</wp:comment_id>
        <wp:comment_author><![CDATA[Vojtech Ruzicka]]></wp:comment_author>
        <wp:comment_author_email><![CDATA[vojtech.ruz@gmail.com]]></wp:comment_author_email>
        <wp:comment_author_url>http://vojtechruzicka.com</wp:comment_author_url>
        <wp:comment_author_IP><![CDATA[213.220.217.109]]></wp:comment_author_IP>
        <wp:comment_date><![CDATA[2018-01-31 08:16:53]]></wp:comment_date>
        <wp:comment_date_gmt><![CDATA[2018-01-31 07:16:53]]></wp:comment_date_gmt>
        <wp:comment_content><![CDATA[The article is now updated with a link to docs explaining this issue, no more confusion, thanks for pointing it out :)]]></wp:comment_content>
        <wp:comment_approved><![CDATA[1]]></wp:comment_approved>
        <wp:comment_type><![CDATA[]]></wp:comment_type>
        <wp:comment_parent>272</wp:comment_parent>
        <wp:comment_user_id>1</wp:comment_user_id>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
            <wp:meta_value><![CDATA[a:3:{s:4:"time";d:1517383013.6357419490814208984375;s:5:"event";s:9:"check-ham";s:4:"user";s:14:"vojtechruzicka";}]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_post_as]]></wp:meta_key>
            <wp:meta_value><![CDATA[jetpack]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_avatar]]></wp:meta_key>
            <wp:meta_value><![CDATA[https://s2.wp.com/wp-content/mu-plugins/highlander-comments/images/wplogo.png]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
            <wp:meta_value><![CDATA[false]]></wp:meta_value>
        </wp:commentmeta>
        <wp:commentmeta>
            <wp:meta_key><![CDATA[hc_foreign_user_id]]></wp:meta_key>
            <wp:meta_value><![CDATA[1]]></wp:meta_value>
        </wp:commentmeta>
    </wp:comment>
</item>